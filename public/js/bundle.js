!function(){var t={base_url:"http://localhost:5000",hideModals(){const t=document.querySelectorAll(".modal");for(const e of t)e.classList.remove("is-active")}};const e={showAddCardModal(t){const e=document.getElementById("addCardModal"),s=t.target.closest("[data-list-id]");document.querySelector('[name="list_id"]').value=s.dataset.listId,e.classList.add("is-active")},showEditCardForm(t){const e=t.target.closest("[data-card-id]"),s=e.querySelector("form");e.querySelector(".card-description").classList.add("is-hidden"),s.classList.remove("is-hidden")},async handleAddCardForm(s){s.preventDefault();const a=s.target,d=new FormData(a),o=d.get("list_id");try{const s=await fetch(t.base_url+"/cards",{method:"POST",body:d});if(!s.ok)throw new Error(s.status);const a=await s.json();e.makeCardInDOM(a),await e.updateAllCardsPositionFromListId(o)}catch(r){alert("Impossible de cr\xe9er la liste depuis l'API. Statut: "+r)}a.querySelector('input[name="content"]').value="",t.hideModals()},async handleEditCardForm(e){e.preventDefault();const s=e.target,a=new FormData(s),d=a.get("card-id"),o=a.get("color"),r=s.closest("[data-card-id]"),i=r.querySelector(".card-description");try{const e=await fetch(`${t.base_url}/cards/${d}`,{method:"PATCH",body:a});if(200!==e.status)throw new Error("Impossible d'\xe9diter le nom de cette carte. Statut: "+e.status);const n=a.get("content");n&&(i.textContent=n),r.style.backgroundColor=o+"50",i.classList.remove("is-hidden"),s.classList.add("is-hidden")}catch(n){alert(n),i.classList.remove("is-hidden"),s.classList.add("is-hidden")}},async handleDeleteCard(e){e.preventDefault();const s=e.target.closest("[data-card-id]"),a=s.dataset.cardId;try{const e=await fetch(`${t.base_url}/cards/${a}`,{method:"DELETE"});if(204!==e.status)throw new Error("Impossible de supprimer cette carte. Statut: "+e.status);s.remove()}catch(d){alert(d)}},makeCardInDOM(t){const s=document.getElementById("card-template"),a=document.importNode(s.content,!0);a.querySelector(".card-description").textContent=t.content,a.querySelector(".box").style.backgroundColor=t.color+"50",a.querySelector(".edit-card-button").addEventListener("click",e.showEditCardForm),a.querySelector(".delete-card-button").addEventListener("click",e.handleDeleteCard),a.querySelector("form").addEventListener("submit",e.handleEditCardForm),a.querySelector('[name="card-id"]').value=t.id,a.querySelector('[name="color"]').value=t.color,a.querySelector("[data-card-id]").dataset.cardId=t.id,document.querySelector(`[data-list-id="${t.list_id}"]`).querySelector(".panel-block").appendChild(a)},async updateAllCardsPositionFromListId(e){const s=document.querySelector(`[data-list-id="${e}"]`).querySelectorAll("[data-card-id]");0!==s.length&&s.forEach(async(s,a)=>{const d=new FormData;d.set("position",a),d.set("list_id",e);const o=s.dataset.cardId;try{const e=await fetch(`${t.base_url}/cards/${o}`,{method:"PATCH",body:d});if(200!==e.status)throw new Error(`Impossible d'\xe9diter la position de la carte poss\xe9dant l'id ${o}. Statut: ${e.status}`)}catch(r){alert(r)}})},async handleCardDragNDrop(t){const s=t.to.closest("[data-list-id]").dataset.listId;if(await e.updateAllCardsPositionFromListId(s),t.from!==t.to){const s=t.from.closest("[data-list-id]").dataset.listId;await e.updateAllCardsPositionFromListId(s)}}};var s=e;const a={showAddListModal(){document.getElementById("addListModal").classList.add("is-active")},showEditTitleForm(t){const e=t.target;e.classList.add("is-hidden"),e.closest("[data-list-id]").querySelector("form").classList.remove("is-hidden")},async handleAddListForm(e){e.preventDefault();const s=e.target,d=new FormData(s);try{const e=await fetch(t.base_url+"/lists",{method:"POST",body:d});if(!e.ok)throw new Error(e.status);const s=await e.json();a.makeListInDOM(s),await a.updateAllListsPositions()}catch(o){alert("Impossible de cr\xe9er la liste depuis l'API. Statut: "+o)}s.querySelector('input[name="name"]').value="",t.hideModals()},async handleEditTitleFormSubmit(e){e.preventDefault();const s=e.target,a=new FormData(s),d=a.get("list-id"),o=s.closest("[data-list-id]").querySelector("h2");try{const e=await fetch(`${t.base_url}/lists/${d}`,{method:"PATCH",body:a});if(200!==e.status)throw new Error("Impossible d'\xe9diter le nom de cette liste. Statut: "+e.status);const r=a.get("name");o.textContent=r,o.classList.remove("is-hidden"),s.classList.add("is-hidden")}catch(r){alert(r),o.classList.remove("is-hidden"),s.classList.add("is-hidden")}},async handleDeleteList(e){if(e.preventDefault(),!confirm("Etes-vous sur de vouloir supprimer cette liste ?"))return;const s=e.target.closest("[data-list-id]"),a=s.dataset.listId;try{const e=await fetch(`${t.base_url}/lists/${a}`,{method:"DELETE"});if(204!==e.status)throw new Error("Impossible de supprimer cette liste. Statut: "+e.status);s.remove()}catch(d){alert(d)}},makeListInDOM(t){const e=document.getElementById("list-template"),d=document.importNode(e.content,!0),o=d.querySelector("h2");o.textContent=t.name,o.addEventListener("dblclick",a.showEditTitleForm);const r=d.querySelector("form");r.addEventListener("submit",a.handleEditTitleFormSubmit),r.querySelector('[name="list-id"]').value=t.id,d.querySelector("[data-list-id]").dataset.listId=t.id,d.querySelector(".add-card--button").addEventListener("click",s.showAddCardModal),d.querySelector(".delete-list-button").addEventListener("click",a.handleDeleteList);const i=d.querySelector(".cards-container");Sortable.create(i,{group:"cardsList",onEnd:s.handleCardDragNDrop}),document.querySelector("#lists-container").appendChild(d)},async updateAllListsPositions(){document.querySelectorAll("[data-list-id]").forEach(async(e,s)=>{const a=new FormData;a.set("position",s);const d=e.dataset.listId;try{const e=await fetch(`${t.base_url}/lists/${d}`,{method:"PATCH",body:a});if(200!==e.status)throw new Error(`Impossible d'\xe9diter la position de la liste poss\xe9dant l'id ${d}. Statut: ${e.status}`)}catch(o){alert(o)}})}};var d=a;const o={init:function(){o.getListsFromAPI(),o.addListenerToActions(),o.activeDragNDropOnListsContainer(),console.log("app.init !")},addListenerToActions(){document.getElementById("addListButton").addEventListener("click",d.showAddListModal);const e=document.querySelectorAll(".close");for(const s of e)s.addEventListener("click",t.hideModals);document.querySelector("#addListModal form").addEventListener("submit",d.handleAddListForm);const a=document.querySelectorAll(".add-card--button");for(const t of a)t.addEventListener("click",s.showAddCardModal);document.querySelector("#addCardModal form").addEventListener("submit",s.handleAddCardForm),document.querySelectorAll(".list-title")},async getListsFromAPI(){try{const e=await fetch(t.base_url+"/lists");if(!e.ok)throw new Error(e.status);const a=await e.json();for(const t of a){d.makeListInDOM(t);for(const e of t.cards)s.makeCardInDOM(e)}await d.updateAllListsPositions()}catch(e){alert("Impossible de r\xe9cup\xe9rer les listes depuis l'API. Statut: "+e)}},activeDragNDropOnListsContainer(){const t=document.getElementById("lists-container");Sortable.create(t,{onEnd:d.updateAllListsPositions})}};document.addEventListener("DOMContentLoaded",o.init)}();